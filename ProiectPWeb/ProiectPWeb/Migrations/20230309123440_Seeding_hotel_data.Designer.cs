// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProiectPWeb.EFCore;

#nullable disable

namespace ProiectPWeb.Migrations
{
    [DbContext(typeof(EF_DataContext))]
    [Migration("20230309123440_Seeding_hotel_data")]
    partial class Seeding_hotel_data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProiectPWeb.EFCore.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ProiectPWeb.EFCore.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("number_of_free_spaces")
                        .HasColumnType("integer");

                    b.Property<int>("number_of_rooms")
                        .HasColumnType("integer");

                    b.Property<int>("number_of_spaces")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "default",
                            number_of_free_spaces = 0,
                            number_of_rooms = 0,
                            number_of_spaces = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Enziem Wien Hotel",
                            number_of_free_spaces = 10,
                            number_of_rooms = 5,
                            number_of_spaces = 10
                        });
                });

            modelBuilder.Entity("ProiectPWeb.EFCore.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("roomId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("roomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ProiectPWeb.EFCore.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("hotelId")
                        .HasColumnType("integer");

                    b.Property<int>("number")
                        .HasColumnType("integer");

                    b.Property<int>("number_of_persons")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("hotelId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ProiectPWeb.EFCore.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("hotelId")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("password_hash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("password_salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("hotelId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProiectPWeb.EFCore.Comment", b =>
                {
                    b.HasOne("ProiectPWeb.EFCore.User", "user")
                        .WithMany("comments")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("ProiectPWeb.EFCore.Reservation", b =>
                {
                    b.HasOne("ProiectPWeb.EFCore.Room", "room")
                        .WithMany("reservations")
                        .HasForeignKey("roomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("room");
                });

            modelBuilder.Entity("ProiectPWeb.EFCore.Room", b =>
                {
                    b.HasOne("ProiectPWeb.EFCore.Hotel", "hotel")
                        .WithMany("rooms")
                        .HasForeignKey("hotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hotel");
                });

            modelBuilder.Entity("ProiectPWeb.EFCore.User", b =>
                {
                    b.HasOne("ProiectPWeb.EFCore.Hotel", "hotel")
                        .WithMany("user")
                        .HasForeignKey("hotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hotel");
                });

            modelBuilder.Entity("ProiectPWeb.EFCore.Hotel", b =>
                {
                    b.Navigation("rooms");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ProiectPWeb.EFCore.Room", b =>
                {
                    b.Navigation("reservations");
                });

            modelBuilder.Entity("ProiectPWeb.EFCore.User", b =>
                {
                    b.Navigation("comments");
                });
#pragma warning restore 612, 618
        }
    }
}
